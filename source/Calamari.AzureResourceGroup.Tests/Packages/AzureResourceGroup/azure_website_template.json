{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the web app that you wish to create."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service plan to use for hosting the web app."
      }
    },
    "siteLocation": {
      "type": "string",
      "metadata": {
        "description": "The location to use for creating the web app and hosting plan. It must be one of the Azure locations that support web apps."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the hosting plan (small, medium, or large)."
      }
    },
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix to add to the name of the storage account"
      }
    },
    "storageAccountList": {
      "type": "array",
      "metadata": {
          "description": "List of storage accounts that need to be created"
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2015-04-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "sku": "[parameters('sku')]",
        "workerSize": "[parameters('workerSize')]",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('siteLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[parameters('hostingPlanName')]"
      }
    },
    {
      "name": "[concat(parameters('storageAccountPrefix'), parameters('storageAccountList')[copyIndex()].name)]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('storageAccountList')[copyIndex()].location]",
      "copy": {
          "name": "storageAccountLoop",
          "count": "[length(parameters('storageAccountList'))]"
      },
      "properties": {
          "accountType": "[parameters('storageAccountList')[copyIndex()].storageAccountType]"
      }
    }    
  ],
  "outputs": {
    "siteUri": {
      "type": "string",
      "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0])]"
    },
    "stgobject1": {
      "type": "object",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountPrefix'), parameters('storageAccountList')[0].name)),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"
    },
    "stgobject2": {
      "type": "object",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountPrefix'), parameters('storageAccountList')[1].name)),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"
    },
    "stgobject3": {
      "type": "object",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountPrefix'), parameters('storageAccountList')[2].name)),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"
    }
  }
}
