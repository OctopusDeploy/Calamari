<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Version>1.0.0.0</Version>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AssemblyName>Calamari</AssemblyName>
    <OutputType>Exe</OutputType>
    <PackageId>Calamari</PackageId>
    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
    <PackageProjectUrl>https://github.com/OctopusDeploy/Calamari</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/OctopusDeploy/Calamari/blob/master/LICENSE</PackageLicenseUrl>
    <Authors>Octopus Deploy</Authors>
    <Copyright>Octopus Deploy Pty Ltd</Copyright>
    <PackageTags>tool</PackageTags>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/OctopusDeploy/Calamari/</RepositoryUrl>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Description>Contains the command-line Calamari tool that is used by Tentacle to perform depoyment actions on machines.</Description>
    <Product>Calamari</Product>
    <RuntimeIdentifiers>win-x64;linux-x64;osx-x64;linux-arm</RuntimeIdentifiers>
    <ApplicationManifest>Calamari.exe.manifest</ApplicationManifest>
    <TargetFrameworks>netcoreapp2.0;net40</TargetFrameworks>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include="Integration\Scripting\Bash\Bootstrap.sh" />
    <EmbeddedResource Include="Integration\Scripting\WindowsPowerShell\Bootstrap.ps1" />
    <EmbeddedResource Include="Integration\Scripting\WindowsPowerShell\DebugBootstrap.ps1" />
    <EmbeddedResource Include="Integration\Scripting\ScriptCS\Bootstrap.csx" />
    <EmbeddedResource Include="Integration\Scripting\FSharp\Bootstrap.fsx" />
    <EmbeddedResource Include="Scripts\**" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <DefineConstants>$(DefineConstants);USE_NUGET_V2_LIBS;IIS_SUPPORT;USE_OCTODIFF_EXE;WINDOWS_CERTIFICATE_STORE_SUPPORT;USE_ALPHAFS_FOR_LONG_FILE_PATH_SUPPORT</DefineConstants>
    <PlatformTarget>anycpu</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.0' ">
    <DefineConstants>$(DefineConstants);USE_OCTOPUS_XMLT;USE_SYSTEM_IO_DIRECTORY;USE_NUGET_V3_LIBS;WORKAROUND_FOR_EMPTY_STRING_BUG</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="OctoDiff" Version="1.1.2" />
    <PackageReference Include="FSharp.Compiler.Tools" Version="4.0.0.1" />
    <PackageReference Include="Octopus.Versioning" Version="4.1.0" />
    <PackageReference Include="ScriptCS" Version="0.17.1" />
    <PackageReference Include="Octostache" Version="2.1.10" />
    <PackageReference Include="SharpCompress" Version="0.15.2" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' ">
    <PackageReference Include="BouncyCastle" Version="1.8.1-octopus" />
    <PackageReference Include="MarkdownSharp" Version="1.13.0.0" />
    <PackageReference Include="Microsoft.Data.Edm" Version="5.6.4" />
    <PackageReference Include="Microsoft.Data.OData" Version="5.6.4" />
    <PackageReference Include="Microsoft.Data.Services.Client" Version="5.6.4" />
    <PackageReference Include="Microsoft.Net.Http" Version="2.2.29" />
    <PackageReference Include="Microsoft.Web.Administration" Version="7.0.0.0" />
    <PackageReference Include="Microsoft.Web.Deployment" Version="3.6.0" />
    <PackageReference Include="Microsoft.Web.Xdt" Version="2.1.1" />
    <PackageReference Include="NuGet.CommandLine" Version="2.8.6" />
    <PackageReference Include="NuGet.Core" Version="2.14.0" />
    <PackageReference Include="System.Spatial" Version="5.6.4" />
    <PackageReference Include="AlphaFS" Version="2.1.3-octopus0006" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Configuration.Install" />
    <Reference Include="System.Core" />
    <Reference Include="System.DirectoryServices" />
    <Reference Include="System.Net" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFrameworkIdentifier)' == '.NETCoreApp' ">
    <PackageReference Include="NuGet.Commands" Version="3.5.0" />
    <PackageReference Include="Markdown" Version="2.1.0" />
    <PackageReference Include="NuGet.Protocol.Core.v3" Version="3.5.0" />
    <PackageReference Include="Octopus.Web.XmlTransform" Version="1.0.0-ci0018" />
    <PackageReference Include="Sprache" Version="2.1.0" />
    <PackageReference Include="System.Threading.AccessControl" Version="4.3.0" />
    <PackageReference Include="System.IO.FileSystem" Version="4.3.0" />
    <PackageReference Include="System.IO.FileSystem.AccessControl" Version="4.3.0" />
    <PackageReference Include="System.IO.Packaging" Version="4.3.0" />
    <PackageReference Include="System.Text.Encoding.CodePages" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Include="System.ComponentModel.TypeConverter">
      <Version>4.3.0</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <None Update="Calamari.exe.manifest">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Target Name="GetToolFiles">
    <CreateItem Include="@(PackageDefinitions)" Condition="'%(Name)' == 'FSharp.Compiler.Tools'">
      <Output TaskParameter="Include" ItemName="FSharpCompilerToolsRef" />
    </CreateItem>
    <CreateItem Include="@(PackageDefinitions)" Condition="'%(Name)' == 'ScriptCS'">
      <Output TaskParameter="Include" ItemName="ScriptCSRef" />
    </CreateItem>
    <PropertyGroup>
      <FSharpCompilerTools>@(FSharpCompilerToolsRef->'%(ResolvedPath)')/tools/*.*</FSharpCompilerTools>
      <ScriptCS>@(ScriptCSRef->'%(ResolvedPath)')/tools/*.*</ScriptCS>
    </PropertyGroup>
    <ItemGroup>
      <FSharpFiles Include="$(FSharpCompilerTools)" />
      <ScriptCSFiles Include="$(ScriptCS)" />
    </ItemGroup>
  </Target>
  <Target Name="CopyToolsAfterBuild" AfterTargets="Build" DependsOnTargets="GetToolFiles">
    <Copy SourceFiles="@(FSharpFiles)" DestinationFolder="$(OutDir)/FSharp/" />
    <Copy SourceFiles="@(ScriptCSFiles)" DestinationFolder="$(OutDir)/ScriptCS/" />
  </Target>
  <Target Name="CopyToolsAfterPublish" AfterTargets="Publish" DependsOnTargets="GetToolFiles">
    <Copy SourceFiles="@(FSharpFiles)" DestinationFolder="$(PublishDir)/FSharp/" />
    <Copy SourceFiles="@(ScriptCSFiles)" DestinationFolder="$(PublishDir)/ScriptCS/" />
  </Target>
</Project>