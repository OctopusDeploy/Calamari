<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="c462a2ea-5ba9-47b2-91a2-73f255482412" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/9.0/project-config.xsd">
  <name>Build: Calamari</name>
  <description>Build the open source Calamari package</description>
  <settings>
    <options>
      <option name="artifactRules" value="built-packages/Calamari*.nupkg&#xA;source/Calamari.Tests/bin/**/*=&gt;Binaries.zip&#xA;source/packages/Octopus.Dependencies.ScriptCS.3.0.1/runtime/**/*=&gt;ScriptCS.zip&#xA;source/packages/FSharp.Compiler.Tools.4.0.0.1/tools/**/*=&gt;FSharp.zip" />
      <option name="checkoutMode" value="ON_AGENT" />
      <option name="showDependenciesChanges" value="true" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_109" />
      <setting-ref ref="RUNNER_52" />
    </disabled-settings>
    <parameters>
      <param name="system.MajorMinorVersionDevelopment" value="%MajorMinorVersionDevelopment%" />
      <param name="system.MajorMinorVersionMaster" value="%MajorMinorVersion%" />
      <param name="system.MajorMinorVersionPreRelease" value="%MajorMinorVersionPreRelease%" />
      <param name="system.OctopusPackageVersion" value="%build.number%" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_121" name="git reset --hard" type="simpleRunner">
        <parameters>
          <param name="script.content" value="git reset --hard" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_124" name="" type="MR_GitVersion3">
        <parameters>
          <param name="mr.GitVersion.output" value="buildserver" />
          <param name="mr.GitVersion.password" value="zxx52467cdee324aa9768b065e3e10cc85e2cca34bb02a162e9b58c19c4c55de56deb8b57790a6b50f1192f478978efc1c532e956cd1e9bea9d" />
          <param name="mr.GitVersion.updateAssemblyInfo" value="false" />
          <param name="mr.GitVersion.updateGitVersion" value="false" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_109" name="Build Number" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_bitness" value="x86" />
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_script_code"><![CDATA[# These are project build parameters in TeamCity
# Depending on the branch, we will use different major/minor versions
$majorMinorVersionMaster = "%system.MajorMinorVersionMaster%"
$majorMinorVersionPreRelease = "%system.MajorMinorVersionPreRelease%"
$majorMinorVersionDevelopment = "%system.MajorMinorVersionDevelopment%"

# TeamCity's auto-incrementing build counter; ensures each build is unique
$buildCounter = "%build.counter%" 

# This gets the name of the current Git branch. 
$branch = "%teamcity.build.branch%"

# Sometimes the branch will be a full path, e.g., 'refs/heads/master'. 
# If so we'll base our logic just on the last part.
if ($branch.Contains("/")) 
{
  $branch = $branch.substring($branch.lastIndexOf("/")).trim("/")
}

Write-Host "Branch: $branch"

if ($branch -eq "master") 
{
 $buildNumber = "${majorMinorVersionMaster}.${buildCounter}"
}
elseif ($branch -eq "beta") 
{
 $buildNumber = "${majorMinorVersionPreRelease}.${buildCounter}-beta"
}
else
{
 # If the branch starts with "feature-", just use the feature name
 $branch = $branch.replace("feature-", "")
 $buildNumber = "${majorMinorVersionDevelopment}.${buildCounter}-${branch}"
}

Write-Host "##teamcity[buildNumber '$buildNumber']"]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_122" name="Restore source packages" type="jb.nuget.installer">
        <parameters>
          <param name="nuget.path" value="?NuGet.CommandLine.DEFAULT.nupkg" />
          <param name="nuget.sources"><![CDATA[http://www.myget.org/F/octopus-dependencies/
https://nuget.org/api/v2/]]></param>
          <param name="nuget.updatePackages.mode" value="sln" />
          <param name="nuget.use.restore" value="restore" />
          <param name="nugetCustomPath" value="?NuGet.CommandLine.DEFAULT.nupkg" />
          <param name="nugetPathSelector" value="?NuGet.CommandLine.DEFAULT.nupkg" />
          <param name="sln.path" value="source/Calamari.sln" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_50" name="" type="VS.Solution">
        <parameters>
          <param name="build-file-path" value="source\Calamari.sln" />
          <param name="msbuild.prop.Configuration" value="Release" />
          <param name="msbuild_version" value="14.0" />
          <param name="run-platform" value="x86" />
          <param name="targets" value="Rebuild" />
          <param name="teamcity.step.mode" value="default" />
          <param name="toolsVersion" value="14.0" />
          <param name="vs.version" value="vs2015" />
        </parameters>
      </runner>
      <runner id="RUNNER_58" name="Run Tests" type="NUnit">
        <parameters>
          <param name="dotNetCoverage.NCover.HTMLReport.File.Sort" value="0" />
          <param name="dotNetCoverage.NCover.HTMLReport.File.Type" value="1" />
          <param name="dotNetCoverage.NCover.Reg" value="selected" />
          <param name="dotNetCoverage.NCover.platformBitness" value="x86" />
          <param name="dotNetCoverage.NCover.platformVersion" value="v2.0" />
          <param name="dotNetCoverage.NCover3.Reg" value="selected" />
          <param name="dotNetCoverage.NCover3.args" value="//ias .*" />
          <param name="dotNetCoverage.NCover3.platformBitness" value="x86" />
          <param name="dotNetCoverage.NCover3.platformVersion" value="v2.0" />
          <param name="dotNetCoverage.NCover3.reporter.executable.args" value="//or FullCoverageReport:Html:{teamcity.report.path}" />
          <param name="dotNetCoverage.PartCover.Reg" value="selected" />
          <param name="dotNetCoverage.PartCover.includes" value="[*]*" />
          <param name="dotNetCoverage.PartCover.platformBitness" value="x86" />
          <param name="dotNetCoverage.PartCover.platformVersion" value="v2.0" />
          <param name="dotNetTestRunner.Type" value="NUnit" />
          <param name="nunit_categery_exclude" value="Nix" />
          <param name="nunit_enabled" value="checked" />
          <param name="nunit_environment" value="v4.0" />
          <param name="nunit_include" value="source/Calamari.Tests/bin/Calamari.Tests.dll" />
          <param name="nunit_platform" value="MSIL" />
          <param name="nunit_version" value="NUnit-2.6.3" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_52" name="" type="jb.nuget.publish">
        <parameters>
          <param name="nuget.path" value="?NuGet.CommandLine.2.8.1.nupkg" />
          <param name="nuget.publish.files"><![CDATA[built-packages/Calamari.%build.number%.nupkg
built-packages/Calamari.*.%build.number%.nupkg]]></param>
          <param name="nuget.publish.source" value="https://www.myget.org/F/octopus-dependencies/" />
          <param name="nugetCustomPath" value="?NuGet.CommandLine.2.8.1.nupkg" />
          <param name="nugetPathSelector" value="?NuGet.CommandLine.2.8.1.nupkg" />
          <param name="secure:nuget.api.key" value="zxxdaad8983b2d569341429f959c86f74912a6f90881ae1810986a25b95611c4499af47943d7e0ffafb" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="OctopusDeploy_Calamari" />
    </vcs-settings>
    <requirements>
      <starts-with name="system.agent.name" value="BLD" />
    </requirements>
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="branchFilter"><![CDATA[+:refs/heads/*
+:refs/tags/*]]></param>
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="xml-report-plugin">
        <parameters>
          <param name="xmlReportParsing.reportDirs" value="**/TestResults.xml" />
          <param name="xmlReportParsing.reportType" value="nunit" />
        </parameters>
      </extension>
      <extension id="jetbrains.agent.free.space" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-work" value="1gb" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup>
      <policy type="builds" cleanup-level="HISTORY_ENTRY">
        <parameters>
          <param name="keepBuilds.count" value="20" />
        </parameters>
      </policy>
      <policy type="builds" cleanup-level="ARTIFACTS">
        <parameters>
          <param name="keepBuilds.count" value="20" />
        </parameters>
      </policy>
    </cleanup>
  </settings>
</build-type>

