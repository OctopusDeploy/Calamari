#!/usr/bin/env bash

SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
YELLOW='\033[1;33m'
RED='\033[0;31m'
GREEN='\033[0;32m'
NO_COLOUR='\033[0m'

# Define default arguments.
SCRIPT="build.cake"
TARGET="--target=Default"
CONFIGURATION="--configuration=Release"
WHERE=""
VERBOSITY="--verbosity=verbose"
DRYRUN=""
SCRIPT_ARGUMENTS=()

# Parse arguments.
for i in "$@"; do
    case $1 in
        -s|--script) SCRIPT="$2"; shift ;;
        -t|--target) TARGET="--target=$2"; shift ;;
        -c|--configuration) CONFIGURATION="--configuration=$2"; shift ;;
        -v|--verbosity) VERBOSITY="--verbosity=$2"; shift ;;
		-w|--where) WHERE="--where=$2"; shift ;;
		-d|--dryrun) DRYRUN="--dryrun" ;;
        --) shift; SCRIPT_ARGUMENTS+=("$@"); break ;;
        *) SCRIPT_ARGUMENTS+=("$1") ;;
    esac
    shift
done

dotnet --version 2>&1 > /dev/null

if [ $? -ne 0 ]; then
    printf "${RED}Error:${NO_COLOUR} please install the dotnet cli\n"
    exit 1;
fi

printf "${GREEN}Installing Cake.Tool with dotnet${NO_COLOUR}\n"
OUTPUT=`dotnet tool install --global Cake.Tool 2>&1`

if [[ $? -eq 1 ]]; then
    printf "${YELLOW}${OUTPUT}${NO_COLOUR}\n"
elif [ $? -ne 0 ]; then
    printf "${RED}Error:${NO_COLOUR} unable to install Cake.Tool with dotnet. command: dotnet tool install --global Cake.Tool\n"
    exit 1;
fi

printf "${GREEN}Bootstrapping cake...${NO_COLOUR}\n"
dotnet cake --bootstrap

if [ $? -ne "0" ]; then
    printf "${RED}Error:${NO_COLOUR} failed to bootstrap cake. command: dotnet cake --bootstrap\n"
    exit 1;
fi

printf "${GREEN}Executing cake build...${NO_COLOUR}\n"
dotnet cake $SCRIPT --includeNetFramework=false $VERBOSITY $CONFIGURATION $WHERE $TARGET $DRYRUN "${SCRIPT_ARGUMENTS[@]}"

if [ $? -ne 0 ]; then
    printf "${RED}Error:${NO_COLOUR} Cake build failed. command: dotnet cake $SCRIPT --includeNetFramework=false $VERBOSITY $CONFIGURATION $WHERE $TARGET $DRYRUN ${SCRIPT_ARGUMENTS[@]}\n"
    exit 1;
fi
